**************************************************************************
Firebase Setup For House Marketplace

1.Create Firebase Project
2.Create "web" app within firebase to get config values
3.Install firebase in your project "npm i firebase"
4.Create a config in your project
5.Add authentication for email/password and Google
6.Create a user from Firebase
7.Enable Firestore
8.Add rules for firestore
9.Enable store
10.Add rules for storage
11.Create 3 composite indexes for advanced querying


https://gist.github.com/bradtraversy
Where can I find the listings.json file for populating the database? Thank you
https://haee.udemy.com/course/react-front-to-back-2022/learn/lecture/29769190#questions/16993010



First
-Collection: Listing
-Query Scope: Collection

Field
type		Ascending
timestamp	Descending


Second
-Collection: Listing
-Query Scope: Collection

Field
userRef		Ascending
timestamp	Descending


**************************************************************************


https://console.firebase.google.com/
there I create an application on virtual server

open terminal and type:
npx create-react-app house-marketplace -use-npm

create firebase.config.js in src folder
and copy from https://console.firebase.google.com/u/0/project/house-marketplace-app-84d7e/overview

// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyAgW2kavsgu5CC9Qo_3urVWUPTEjf6yhXs",
  authDomain: "house-marketplace-app-84d7e.firebaseapp.com",
  projectId: "house-marketplace-app-84d7e",
  storageBucket: "house-marketplace-app-84d7e.appspot.com",
  messagingSenderId: "407234061933",
  appId: "1:407234061933:web:f505e065e1073280800164"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);

AND CHANGE TO


import { initializeApp } from "firebase/app";
import { getFirestore } from "firebase/firestore";

// Your web app's Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyAgW2kavsgu5CC9Qo_3urVWUPTEjf6yhXs",
  authDomain: "house-marketplace-app-84d7e.firebaseapp.com",
  projectId: "house-marketplace-app-84d7e",
  storageBucket: "house-marketplace-app-84d7e.appspot.com",
  messagingSenderId: "407234061933",
  appId: "1:407234061933:web:f505e065e1073280800164"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
export const db = getFirestore()

instal firebase
npm i firebase

from https://github.com/bradtraversy/house-marketplace
give to your project assets folder & index.css & favicon.ico

then delete App.css, App.test.js, logo.svg, setupTest.js

and in App.js get rid everything inside div

function App() {
  return (
    <>
      <h1>My App</h1>
    </>
  );
}

export default App;


then start the server
npm start

now get back to firebase page https://console.firebase.google.com/u/0/project/house-marketplace-app-84d7e/overview
CLICK TO cONTINUE TO THE CONSOLE

then to Firestor Database and Start collection, name collection, ....
in Data -> Start collection -> fill it by JSON
in Indexes -> 

Collection ID	Fields indexed	Query scope		Status	
listings	offer Ascending timestamp Descending	Collection	
Building…	
listings	type Ascending timestamp Descending	Collection	
Building…	
listings	userRef Ascending timestamp Descending	Collection	
Building…

then npm i react-router-dom

for sign to firebase.google
https://firebase.google.com/docs/auth/web/start#web-version-9 alike

import { getAuth, createUserWithEmailAndPassword, updateProfile } from "firebase/auth";
import { db } from '../firebase.config';

const auth = getAuth();
createUserWithEmailAndPassword(auth, email, password)
  .then((userCredential) => {
    // Signed in 
    const user = userCredential.user;
    // ...
  })
  .catch((error) => {
    const errorCode = error.code;
    const errorMessage = error.message;
    // ..
  });


then
https://firebase.google.com/docs/firestore/manage-data/add-data?hl=en&authuser=0#web-version-9

go to application -> IndexedDB -> firebaseLocationStorageDb -> firebaseLocalStorage -> Value
there is all information about logged user

in https://github.com/fkhadra/react-toastify?msclkid=c612cbb7a59d11ec967c45f3dc0dfb6f
lets npm i react-toastify
import { ToastContainer } from 'react-toastify' to App.js
let's drive here https://fkhadra.github.io/react-toastify/introduction/?msclkid=c6133f1fa59d11ec9ced1a23fb6a03a3
in SingIn.jsx paste import { toast } from 'react-toastify'

when f5 then the data are null
I must create in components -> PrivateRoute.jsx

Get geolocation from Google Cloud Platform -> Console
In there 'Select a project' -> 'ALL' -> then choose 'house-marketplace-app'
APIs & Services -> click here and there are API services -> enable Geocoding API:
ENABLE APIS AND SERVICES -> search: geocode -> Geocoding API -> ENABLE -> MANAGE
Credentials -> in API Keys make copy of Key (AIzaSyAgW2kavsgu5CC9Qo_3urVWUPTEjf6yhXs) and
if you have some restrictions, go tu restrictions and set strict IP address, or HTTP
then create this:
let geolocation = {}
    let location

    if (geolocationEnabled) {
      const response = await fetch(
        `https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=AIzaSyAgW2kavsgu5CC9Qo_3urVWUPTEjf6yhXs`
      )
    } else {
      geolocation.lat = latitude
      geolocation.lng = longitude
      location = address
    }


some modification then - create .env folder out the scr
// react variable
REACT_APP_GEOCODE_API_KEY='AIzaSyAgW2kavsgu5CC9Qo_3urVWUPTEjf6yhXs'
then
if (geolocationEnabled) {
      const response = await fetch(
        `https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=${process.env.REACT_APP_GEOCODE_API_KEY}`
      )

      const data = await response.json()

      // ? treat the error
      geolocation.lat = data.results[0]?.geometry.location.lat ?? 0
      geolocation.lng = data.results[0]?.geometry.location.lng ?? 0

      // if we have geolocation enabled
      location =
        data.status === 'ZERO_RESULTS'
          ? undefined
          : data.results[0]?.formatted_address

      // if we have geolocation don't enabled
      if (location === undefined || location.includes('undefined')) {
        setLoading(false)
        toast.error('Please enter a correct address')
        return
      }
    } else {
      geolocation.lat = latitude
      geolocation.lng = longitude
      location = address
    }

and at last restart your server, and npm start
and also put to .gigignore as well:

# misc
.DS_Store
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

in CreateListing.jsx
https://firebase.google.com/docs/storage/web/upload-files#web-version-9_6
take and put this:
import { getStorage, ref, uploadBytesResumable, getDownloadURL } from "firebase/storage";
and also
import { db } from '../firebase.config'
and in terminal install uniq id - it allows to create unique id
npm i uuid
then
import {v4 as uuidv4} from 'uuid'






LISTINGS.JSON

Hi Aarthy.

Here you go...

{
  "listings": [
    {
      "name": "Beautiful Stratford Condo",
      "type": "rent",
      "userRef": "ID OF A USER",
      "bedrooms": 2,
      "bathrooms": 2,
      "parking": true,
      "furnished": true,
      "offer": true,
      "regularPrice": 2500,
      "discountedPrice": 2000,
      "location": "8601 West Peachtree St Stratford, CT 06614",
      "geolocation": {
        "lat": "41.205590",
        "lng": "-73.150530"
      },
      "imgUrls": [],
      "timestamp": "00:00:00"
    },
    {
      "name": "Flowery Branch Beauty",
      "type": "sale",
      "userRef": "ID OF A USER",
      "bedrooms": 4,
      "bathrooms": 3,
      "parking": true,
      "furnished": false,
      "offer": false,
      "regularPrice": 650000,
      "location": "517 High Ridge St Flowery Branch, GA 30542",
      "geolocation": {
        "lat": "34.1851",
        "lng": "-83.9252"
      },
      "imgUrls": [],
      "timestamp": "00:00:00"
    },
    {
      "name": "Brand New Cincinnati Home",
      "type": "sale",
      "userRef": "ID OF A USER",
      "bedrooms": 4,
      "bathrooms": 2,
      "parking": true,
      "furnished": false,
      "offer": true,
      "regularPrice": 700000,
      "discountedPrice": 690000,
      "location": "9814B Cedar Swamp Street Cincinnati, OH 45211",
      "geolocation": {
        "lat": "39.144320",
        "lng": "-84.569630"
      },
      "imgUrls": [],
      "timestamp": "00:00:00"
    },
    {
      "name": "Classy Home In Clayton",
      "type": "sale",
      "userRef": "ID OF A USER",
      "bedrooms": 4,
      "bathrooms": 4,
      "parking": true,
      "furnished": false,
      "offer": true,
      "regularPrice": 720000,
      "discountedPrice": 670000,
      "location": "7644 Carswold Dr Clayton, MO, 63105",
      "geolocation": {
        "lat": "35.628690",
        "lng": "-78.455520"
      },
      "imgUrls": [],
      "timestamp": "00:00:00"
    },
    {
      "name": "House For Rent In Milton",
      "type": "sale",
      "userRef": "ID OF A USER",
      "bedrooms": 3,
      "bathrooms": 2,
      "parking": true,
      "furnished": false,
      "offer": false,
      "regularPrice": 630000,
      "location": "810 North Lyme Drive Milton, MA 02186",
      "geolocation": {
        "lat": "42.247270",
        "lng": "-71.053470"
      },
      "imgUrls": [],
      "timestamp": "00:00:00"
    },
    {
      "name": "Modern 3BR Apartment In FL",
      "type": "rent",
      "userRef": "ID OF A USER",
      "bedrooms": 2,
      "bathrooms": 1,
      "parking": true,
      "furnished": true,
      "offer": true,
      "regularPrice": 2300,
      "discountedPrice": 1900,
      "location": "11 Buttonwood Street Fort Lauderdale, FL 33308",
      "geolocation": {
        "lat": "26.209080",
        "lng": "-80.112100"
      },
      "imgUrls": [],
      "timestamp": "00:00:00"
    }
  ]
}

Will
1 upvote
1 month ago
You can also write a 'seeder' script to seed the db which speeds things up.

Here is mine..

import { readFile } from 'fs/promises'
import { db, auth } from '../src/firebase.config.js'
import { addDoc, collection, Timestamp } from 'firebase/firestore'
import { signInWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth'
 
const { listings } = JSON.parse(
  await readFile(new URL('./listings.json', import.meta.url))
)
 
// iterate over listings and create a doc in our listings collection
async function seed(userRef) {
  for (const listing of listings) {
    const docRef = await addDoc(collection(db, 'listings'), {
      ...listing,
      userRef, // overwrite the userRef with a real ref
      timestamp: new Timestamp(), // generate a timestamp
    })
    console.log(`Created listing: ${docRef.id}`)
  }
  console.log('completed seeding... exiting')
  process.exit(0)
}
 
// NOTE: we first need to add a user in our Firebase console then sign them in
// with email and password
// so to use the code as is you need a 'admin@marketplace.com' pasword of 'admin123'
// in your Firebase Auth or replace with a user of your choosing.
signInWithEmailAndPassword(auth, 'admin@marketplace.com', 'admin123').then(
  ({ user: { uid } }) => {
    console.log('logged in user ', uid)
    onAuthStateChanged(auth, (user) => {
      if (user) {
        seed(user.uid)
      } else {
        process.exit(1)
      }
    })
  }
)
Hope that is of use.

go to Leaflets.com page 
then paste into index.html
<link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
      integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
      crossorigin=""
/>

https://leafletjs.com/SlavaUkraini/examples/quick-start/
and then npm i leaflet react-leaflet
and in Listinmg.jsx
import { MapContainer,Marker,Popup,TileLayer } from 'react-leaflet'

in node_modules delete .cache volder
then try npm install
and npm start

now we gonna add the SlideShow for the images
swiperjs.com/react
 npm i swiper@6.8.1
in package.json chesck the swiper 6.8.1
in Listing.jsx:
import SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper'
import { Swiper, SwiperSlide } from 'swiper/react'


now deploy to Vercel -> vercel.com/
push "New Project"
project name fill
and to Environment Variables fill name and value from folder .env 
Deploy
Visit
Now se have problem with Google automatic Sign in, solution is here
https://console.firebase.google.com/project/house-marketplace-app-84d7e/overview
Authentication -> Sign-in method -> Authorized domains -> Add domain -> house-marketplace-six-rho.vercel.app/ -> Add domain
now we can Sign in to google


















